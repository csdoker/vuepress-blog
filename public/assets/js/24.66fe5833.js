(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{475:function(t,a,v){"use strict";v.r(a);var _=v(4),i=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"css知识总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css知识总结"}},[t._v("#")]),t._v(" CSS知识总结")]),t._v(" "),v("h2",{attrs:{id:"基本概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),v("h3",{attrs:{id:"文档流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文档流"}},[t._v("#")]),t._v(" 文档流")]),t._v(" "),v("h4",{attrs:{id:"流动方向"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流动方向"}},[t._v("#")]),t._v(" 流动方向")]),t._v(" "),v("ul",[v("li",[t._v("inline元素从左到右，到达最右边才换行")]),t._v(" "),v("li",[t._v("block元素从上到下，每一个都另起一行")]),t._v(" "),v("li",[t._v("inline-block也是从左到右")])]),t._v(" "),v("h4",{attrs:{id:"宽度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#宽度"}},[t._v("#")]),t._v(" 宽度")]),t._v(" "),v("ul",[v("li",[t._v("inline宽度为内部inline元素的和，不能用width指定")]),t._v(" "),v("li",[t._v("block默认自动计算宽度，可用width指定")]),t._v(" "),v("li",[t._v("inline-block结合前两者特点，可用width")])]),t._v(" "),v("h4",{attrs:{id:"高度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#高度"}},[t._v("#")]),t._v(" 高度")]),t._v(" "),v("ul",[v("li",[t._v("inline高度由line-height间接确定，跟height无关")]),t._v(" "),v("li",[t._v("block高度由内部文档流元素决定，可以设height")]),t._v(" "),v("li",[t._v("inline-block跟block类似，可以设置height")])]),t._v(" "),v("h3",{attrs:{id:"overflow溢出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#overflow溢出"}},[t._v("#")]),t._v(" overflow溢出")]),t._v(" "),v("h4",{attrs:{id:"当内容大于容器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#当内容大于容器"}},[t._v("#")]),t._v(" 当内容大于容器")]),t._v(" "),v("ul",[v("li",[t._v("当内容的宽度或高度大于容器，会溢出")]),t._v(" "),v("li",[t._v("可用overflow来设置是否显示滚动条")]),t._v(" "),v("li",[t._v("auto是灵活设置")]),t._v(" "),v("li",[t._v("scroll是永远显示")]),t._v(" "),v("li",[t._v("hidden是直接隐藏溢出部分")]),t._v(" "),v("li",[t._v("visible是直接显示溢出部分")]),t._v(" "),v("li",[t._v("overflow可以分为overflow-x和overflow-y")])]),t._v(" "),v("h3",{attrs:{id:"脱离文档流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#脱离文档流"}},[t._v("#")]),t._v(" 脱离文档流")]),t._v(" "),v("ul",[v("li",[t._v("float")]),t._v(" "),v("li",[t._v("position: absolute / fixed")])]),t._v(" "),v("h3",{attrs:{id:"两种盒模型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#两种盒模型"}},[t._v("#")]),t._v(" 两种盒模型")]),t._v(" "),v("ul",[v("li",[t._v("content-box 内容盒 - 内容就是盒子的边界")]),t._v(" "),v("li",[t._v("border-box 边框盒 - 边框才是盒子的边界")])]),t._v(" "),v("h4",{attrs:{id:"公式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#公式"}},[t._v("#")]),t._v(" 公式")]),t._v(" "),v("ul",[v("li",[t._v("content-box width = 内容宽度")]),t._v(" "),v("li",[t._v("border-box width = 内容宽度 + padding + border")])]),t._v(" "),v("h2",{attrs:{id:"动画"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#动画"}},[t._v("#")]),t._v(" 动画")]),t._v(" "),v("h3",{attrs:{id:"定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),v("ul",[v("li",[t._v("由许多静止的画面（帧）")]),t._v(" "),v("li",[t._v("以一定的速度（如每秒30张）连续播放时")]),t._v(" "),v("li",[t._v("肉眼因视觉残象产生错觉")]),t._v(" "),v("li",[t._v("而误以为是活动的画面")])]),t._v(" "),v("h3",{attrs:{id:"概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),v("ul",[v("li",[t._v("帧：每个静止的画面都叫做帧")]),t._v(" "),v("li",[t._v("播放速度：每秒24帧（影视）或者每秒30帧（游戏）")])]),t._v(" "),v("h3",{attrs:{id:"浏览器渲染过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染过程"}},[t._v("#")]),t._v(" 浏览器渲染过程")]),t._v(" "),v("p",[t._v("步骤：")]),t._v(" "),v("ol",[v("li",[t._v("根据HTML构建HTML树（DOM）")]),t._v(" "),v("li",[t._v("根据CSS构建CSS树（CSSOM）")]),t._v(" "),v("li",[t._v("将两棵树合并成一颗渲染树（render tree）")]),t._v(" "),v("li",[t._v("Layout布局（文档流、盒模型、计算大小和位置）")]),t._v(" "),v("li",[t._v("Paint绘制（把边框颜色、文字颜色、阴影等画出来）")]),t._v(" "),v("li",[t._v("Compose合成（根据层叠关系展示画面）")])]),t._v(" "),v("h3",{attrs:{id:"transform-变形"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#transform-变形"}},[t._v("#")]),t._v(" transform 变形")]),t._v(" "),v("p",[t._v("四个常用功能：")]),t._v(" "),v("ul",[v("li",[t._v("位移 translate")]),t._v(" "),v("li",[t._v("缩放 scale")]),t._v(" "),v("li",[t._v("旋转 rotate")]),t._v(" "),v("li",[t._v("倾斜 skew")])]),t._v(" "),v("h3",{attrs:{id:"transition-过渡"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#transition-过渡"}},[t._v("#")]),t._v(" transition 过渡")]),t._v(" "),v("h4",{attrs:{id:"作用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),v("ul",[v("li",[t._v("补充中间帧")])]),t._v(" "),v("h4",{attrs:{id:"语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),v("ul",[v("li",[t._v("transition: 属性名 时长 过渡方式 延迟")]),t._v(" "),v("li",[t._v("transition: left 200ms linear")]),t._v(" "),v("li",[t._v("可以用逗号分隔两个不同属性")]),t._v(" "),v("li",[t._v("transition: left 200ms, top 400ms")]),t._v(" "),v("li",[t._v("可以用 all 代表所有属性")]),t._v(" "),v("li",[t._v("transition: all 200ms")]),t._v(" "),v("li",[t._v("过渡方式有：linear | ease | ease-in | ease-out | ease-in-out | cubic-bezier | step-start | step-end | steps")])]),t._v(" "),v("h3",{attrs:{id:"animation-动画"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#animation-动画"}},[t._v("#")]),t._v(" animation 动画")]),t._v(" "),v("p",[t._v("animation：时长 | 过渡方式 | 延迟 | 次数 | 方向 | 填充模式 | 是否暂停 | 动画名")]),t._v(" "),v("ul",[v("li",[t._v("时长：1s 或者 1000ms")]),t._v(" "),v("li",[t._v("过渡方式：跟transition取值一样，如linear")]),t._v(" "),v("li",[t._v("次数：3或者2.4或者infinite")]),t._v(" "),v("li",[t._v("方向：reverse | alternate | alternate-reverse")]),t._v(" "),v("li",[t._v("填充模式：none | forwards | backwards | both")]),t._v(" "),v("li",[t._v("是否暂停：paused | running")]),t._v(" "),v("li",[t._v("以上所有属性都有对应的单独属性")])])])}),[],!1,null,null,null);a.default=i.exports}}]);